// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
let flattenedArr=[];
  for(let i=0; i< array.length; i++){
    for(let j=0; j<array[i].length; j++){
      flattenedArr.push(array[i][j]);
    }
  }
  return flattenedArr;

}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test,update, body) {
if(test(value)){
  body(value);
  return loop(update(value), test, update, body);
}

 
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, func) {
  for (var i of arr){
    if(func(i) !== true){
      return false;
    }
  }return true;

}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////


function dominantDirection(string) {
  //debugger;
  // Split string into array
  //Loop all characters of the array
  let scripts = countBy(string,char=> {
    //return script that char belongs to
  let script = characterScript(char.codePointAt(0));
  return script ? script.direction : 'none';
  });
  scripts.sort((a,b) =>{
    return b.count - a.count;
  });
  return scripts[0].name;
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
